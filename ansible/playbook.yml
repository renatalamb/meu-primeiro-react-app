---
- name: Deploy React App to EC2
  hosts: webservers
  become: yes # Permite que o Ansible execute comandos com sudo na máquina remota
  vars:
    docker_hub_username: "renatalamb" # <--- SUBSTITUA PELO SEU DOCKER ID REAL (nome de usuário do Docker Hub)
    docker_hub_repo: "meu-react-app-repo" # <--- SUBSTITUA PELO NOME DO SEU REPOSITÓRIO DOCKER HUB REAL
    docker_image_tag: "latest" # ou a tag que você usou, ex: "v1.0"
    app_port: 80 # Porta que o Nginx está escutando dentro do container (do seu Dockerfile)
    host_port: 3113 # Porta no host EC2 que você quer expor para o mundo (a que você usará no navegador)

  tasks:
    - name: Update apt packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install Docker dependencies
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - ca-certificates
        - curl
        - gnupg

    - name: Create directory for Docker GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker GPG key
      ansible.builtin.shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg # Garante que só roda se a chave não existir

    - name: Add Docker APT repository
      ansible.builtin.shell: |
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list # Garante que só roda se o arquivo não existir

    - name: Update apt cache after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker Engine, containerd, and Docker Compose
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    # Reverte a conexão para que a associação ao grupo 'docker' tenha efeito.
    # Isso é crucial para que os comandos docker subsequentes funcionem sem sudo.
    - name: Force new connection to apply docker group changes
      meta: reset_connection

    - name: Login to Docker Hub
      community.general.docker_login:
        registry_url: https://index.docker.io/v1/ # Opcional, pode ser omitido para Docker Hub padrão
        username: "{{ docker_hub_username }}"
        password: "{{ lookup('env', 'DOCKER_PASSWORD') }}" # <--- Lê a senha da variável de ambiente

    - name: Pull Docker image from Docker Hub
      community.general.docker_image:
        name: "{{ docker_hub_username }}/{{ docker_hub_repo }}"
        tag: "{{ docker_image_tag }}"
        source: pull
        force_source: yes # Garante que sempre puxe a última versão da tag

    - name: Remove old container (if exists)
      community.general.docker_container:
        name: my-react-app-container
        state: absent
        force_kill: yes # Garante que pare e remova mesmo se estiver com problemas
      ignore_errors: yes # Ignora erro se o container não existir

    - name: Run React app container
      community.general.docker_container:
        name: my-react-app-container
        image: "{{ docker_hub_username }}/{{ docker_hub_repo }}:{{ docker_image_tag }}"
        ports:
          - "{{ host_port }}:{{ app_port }}" # Ex: 3113:80
        state: started
        restart_policy: always
